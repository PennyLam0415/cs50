#include <cs50.h>
#include <stdio.h>
#include <ctype.h>
#include <string.h>
#include <math.h>


int get_index(string justanamecanbeany);
//text會放入justanamecanbeany

int main(void)
{
    string text = get_string("Text: ");
    int index = get_index(text);
    // get_index是一個user-defined funcation
    //把get_index return出嚟的結果define為integer

    if (index < 1)
    {
        printf("Before Grade 1\n");
    }
    else if (index >= 16)
    {
        printf("Grade 16+\n");
    }
    else
    {
        printf("Grade %d\n", index);
        //%d specifies the type of variable as decimal
        //%d and %i behave similar with printf
    }

    return 0;

}

int get_index(string justanamecanbeany) //this is  user-defined function
{
    int letters = 0, sentences = 0, words = 0;

    //for loop start
    for (int i = 0; i < strlen(justanamecanbeany); i++)
    {
        char everysinglecharinthepassage = justanamecanbeany [i];
        if (isalpha(everysinglecharinthepassage))
        {
            letters++;
        }

        if (isspace(everysinglecharinthepassage))
        {
            words++;
        }

        if (everysinglecharinthepassage == '.' || everysinglecharinthepassage == '?' || everysinglecharinthepassage == '!')
        {
            sentences++;
        }
//letters, words, sentences 的得數不用return出嚟,因為這些不是get_index的最後結果,只有係個get_index的最後結果先要用return
    }
    //for loop end

    words++;

    float L = (letters * 100.0f) / words;
    float S = (sentences * 100.0f) / words;
    //因為letters, words, sentences 都是integer, 互為相除的時候個得數會truncated (截斷), 即係冇左小數點後嘅數
    //所以個得數要變為float, 而等號右手邊的兩個variables, 其中一個要變為float, 所以要用100.0f
    //常数有一些后缀，用来区分系统默认类型的。100.0默认是double类型，100.0f就用来表示它是float类型。

    return round(0.0588 * L - 0.296 * S - 15.8);
    //The round() function in C returns the nearest integer value (rounded value) of the given float, integer, or double number
    //based on the decimal part of the number.
    //If the decimal value of the number provided is less than or equal to 0.5, then the value returned
    //will be the integer smaller than the number provided in the argument,
    //and if the decimal value of the number provided is greater than 0.5,
    //then the value returned will be the integer greater than the number provided in the argument.
    //The integer returned by the round() function will be proper and it will not contain any decimal part.

}


